#!/usr/bin/env perl

use strict;
use warnings;

# adapted from https://gist.github.com/dagolden/5171336
# 2013-03-15

my $start_time = time();

my $as = shift
    or die "Usage: $0 <perl-version>";
my @args = @ARGV;
 
# trailing "t" means do threads
my @threads = ( $as =~ /t$/ ) ? (qw/-D usethreads/) : ();
 
$as =~ s/^5\.//;
my $perl = "5.$as";
$perl =~ s/t$//; # strip trailing "t" if any
my $lib = $as . '@std';

my @no_man = qw/-D man1dir=none -D man3dir=none/;

run( qw/perlbrew self-upgrade/ );
run( qw/yes | perlbrew install-cpanm/ );

# install perl and lock it down

$perl = '' if grep { qr{^http://} } @args;

run_or_die( qw/perlbrew install -j 9 --as/, $as, $perl, @threads, @no_man, @args );
run_or_die( qw/chmod -R a-w/, "$ENV{HOME}/perl5/perlbrew/perls/$as" );

# give us a local::lib for installing things
run_or_die( qw/perlbrew lib create/, $lib );

my $elapsed_time = time() - $start_time;
my ($min, $sec) = (int($elapsed_time / 60), $elapsed_time % 60);
print "done (elapsed time: ${min}m ${sec}s). now you should run: perlbrew use $as\@std; perlmodules \n";


sub run_or_die
{
    my $cmd = join(' ', @_);
    print "Running: $cmd\n";
    system $cmd;
    die "$cmd returned exit code $?: stopping" if $?;
    return $?
}

sub run
{
    my $cmd = join(' ', @_);
    print "Running: $cmd\n";
    system $cmd;
    warn "$cmd returned exit code $?" if $?;
    return $?
}

